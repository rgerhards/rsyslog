# Copyright 2025 Rainer Gerhards and Others
#
# https://github.com/rsyslog/rsyslog
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: test omclickhouse

on:
  workflow_dispatch:
  push:
    paths:
      - 'plugins/omclickhouse/**'
      - 'tests/clickhouse-*.sh'
      - 'tests/diag.sh'
      - 'devtools/prepare_clickhouse.sh'
      - '.github/workflows/omclickhouse.yml'
  pull_request:
    paths:
      - 'plugins/omclickhouse/**'
      - 'tests/clickhouse-*.sh'
      - 'tests/diag.sh'
      - 'devtools/prepare_clickhouse.sh'
      - '.github/workflows/omclickhouse.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  omclickhouse:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    services:
      clickhouse:
        image: clickhouse/clickhouse-server:24.8-alpine
        ports:
          - 8123:8123
        options: >-
          --health-cmd "clickhouse-client --query 'SELECT 1'"
          --health-interval 5s
          --health-retries 12
          --health-timeout 5s
    steps:
      - name: git checkout project
        uses: actions/checkout@v4

      - name: install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            autoconf automake libtool pkg-config flex bison \
            libcurl4-openssl-dev libjson-c-dev libssl-dev \
            libgcrypt20-dev libzstd-dev libestr-dev \
            libfastjson-dev liblognorm-dev zlib1g-dev

      - name: configure clickhouse client access
        run: |
          echo "CLICKHOUSE_CLIENT=docker exec ${{ job.services.clickhouse.id }} clickhouse-client" >> "$GITHUB_ENV"
          echo "CLICKHOUSE_SERVER=127.0.0.1" >> "$GITHUB_ENV"
          echo "CLICKHOUSE_HTTP_PORT=8123" >> "$GITHUB_ENV"
          echo "CLICKHOUSE_USE_HTTPS_DEFAULT=off" >> "$GITHUB_ENV"
          echo "CLICKHOUSE_START_CMD=" >> "$GITHUB_ENV"
          echo "CLICKHOUSE_STOP_CMD=" >> "$GITHUB_ENV"

      - name: wait for clickhouse service
        run: |
          for attempt in $(seq 1 30); do
            if docker exec ${{ job.services.clickhouse.id }} clickhouse-client --query 'SELECT 1' >/dev/null 2>&1; then
              exit 0
            fi
            sleep 2
          done
          echo "ClickHouse service did not become ready" >&2
          exit 1

      - name: bootstrap
        run: autoreconf -fvi

      - name: configure
        run: |
          # Disable libuuid so the workflow can configure without pulling
          # additional dependencies that the omclickhouse tests do not need.
          ./configure --enable-testbench --enable-omclickhouse \
            --disable-kafka-tests --disable-elasticsearch-tests \
            --disable-omamqp1 --disable-omazureeventhubs \
            --disable-uuid

      - name: build
        run: make -j"$(nproc)"

      - name: run clickhouse tests
        env:
          TESTS: >-
            clickhouse-start.sh clickhouse-basic.sh clickhouse-dflt-tpl.sh
            clickhouse-retry-error.sh clickhouse-load.sh clickhouse-bulk.sh
            clickhouse-bulk-load.sh clickhouse-limited-batch.sh
            clickhouse-select.sh clickhouse-errorfile.sh
            clickhouse-wrong-quotation-marks.sh
            clickhouse-wrong-template-option.sh
            clickhouse-wrong-insert-syntax.sh clickhouse-stop.sh
        run: |
          make check TESTS="$TESTS" VERBOSE=1

      - name: gather logs on failure
        if: ${{ failure() || cancelled() }}
        run: |
          find tests -maxdepth 1 -name '*.log' -print -exec cat {} \;
